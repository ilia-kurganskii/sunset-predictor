on:
  workflow_call:
    inputs:
      terraform_dir:
        required: true
        type: string
      terraform_apply:
        required: true
        type: boolean
    secrets:
      TF_API_TOKEN:
        required: true
      TELEGRAM_BOT_TOKEN:
        required: true
      OPEN_WEATHER_TOKEN:
        required: true
      TELEGRAM_CHAT_ID:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      ECR_AWS_ACCESS_KEY_ID:
        required: true
      ECR_AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

jobs:
  recorder-service:
    name: "Recorder service"
    runs-on: ubuntu-latest
    needs:
      - terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache Telegram bot
        id: cache-recorder
        uses: actions/cache@v3
        with:
          path: telegram-bot
          key: ${{ hashFiles('sunset-recorder/**')  }}-${{ input.cache_key }}-cache-recorder

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Terraform Init
        working-directory: ${{ inputs.terraform_dir }}
        run: terraform init

      - name: Build docker
        run: |
          ECR_URL=$(terraform -chdir=${{ inputs.terraform_dir }} output -raw  ecr_repository_url)
          docker pull $ECR_URL:latest || true
          docker build --cache-from=$ECR_URL:latest -t $ECR_URL:latest ./sunset-recorder

      - name: Push image to Amazon ECR
        run: |
          ECR_URL=$(terraform -chdir=${{ inputs.terraform_dir }} output -raw  ecr_repository_url)
          docker push $ECR_URL:latest
